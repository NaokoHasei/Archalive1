'------------------------------------------------------------------------------
' <auto-generated>
'     このコードはツールによって生成されました。
'     ランタイム バージョン:2.0.50727.5466
'
'     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
'     コードが再生成されるときに損失したりします。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("S_INITIALINFO"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class S_INITIALINFO
    Inherits Global.System.Data.DataSet
    
    Private tableS_INITIALINFOView As S_INITIALINFOViewDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("S_INITIALINFOView")) Is Nothing) Then
                MyBase.Tables.Add(New S_INITIALINFOViewDataTable(ds.Tables("S_INITIALINFOView")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_INITIALINFOView() As S_INITIALINFOViewDataTable
        Get
            Return Me.tableS_INITIALINFOView
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As S_INITIALINFO = CType(MyBase.Clone,S_INITIALINFO)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("S_INITIALINFOView")) Is Nothing) Then
                MyBase.Tables.Add(New S_INITIALINFOViewDataTable(ds.Tables("S_INITIALINFOView")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableS_INITIALINFOView = CType(MyBase.Tables("S_INITIALINFOView"),S_INITIALINFOViewDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_INITIALINFOView) Is Nothing) Then
                Me.tableS_INITIALINFOView.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "S_INITIALINFO"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/S_INITIALINFO.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableS_INITIALINFOView = New S_INITIALINFOViewDataTable
        MyBase.Tables.Add(Me.tableS_INITIALINFOView)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_INITIALINFOView() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As S_INITIALINFO = New S_INITIALINFO
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub S_INITIALINFOViewRowChangeEventHandler(ByVal sender As Object, ByVal e As S_INITIALINFOViewRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_INITIALINFOViewDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_INITIALINFOViewRow)
        
        Private columnKEYCODE As Global.System.Data.DataColumn
        
        Private columnLOG_DIR As Global.System.Data.DataColumn
        
        Private columnLOG_DELDAY As Global.System.Data.DataColumn
        
        Private columnSEDAISUU As Global.System.Data.DataColumn
        
        Private columnSEDAIBACKUP_DIR As Global.System.Data.DataColumn
        
        Private columnBACKUPFILE_DIR As Global.System.Data.DataColumn
        
        Private columnBACKUPLOG_DIR As Global.System.Data.DataColumn
        
        Private columnBACKUPLOG_NAME As Global.System.Data.DataColumn
        
        Private columnPDF_DIR As Global.System.Data.DataColumn
        
        Private columnPOST_DIR As Global.System.Data.DataColumn
        
        Private columnPOST_DLURL As Global.System.Data.DataColumn
        
        Private columnPOST_COMPRESSNAME As Global.System.Data.DataColumn
        
        Private columnPOST_THAWNAME As Global.System.Data.DataColumn
        
        Private columnSHAITO_SYUSIKIN As Global.System.Data.DataColumn
        
        Private columnSHAITO_RIRITU As Global.System.Data.DataColumn
        
        Private columnSHAITO_KOKUZEI As Global.System.Data.DataColumn
        
        Private columnSHAITO_CHIHOUZEI As Global.System.Data.DataColumn
        
        Private columnSHAITO_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnSHAITO_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnSHAITO_KZEI_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnSHAITO_KZEI_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnSHAITO_CZEI_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnSHAITO_CZEI_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnRHAITO_GENSI As Global.System.Data.DataColumn
        
        Private columnRHAITO_KOKUZEI As Global.System.Data.DataColumn
        
        Private columnRHAITO_CHOHOUZEI As Global.System.Data.DataColumn
        
        Private columnRHAITO_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnRHAITO_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnRHAITO_RITU_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnRHAITO_RITU_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnRHAITO_KZEI_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnRHAITO_KZEI_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnRHAITO_CZEI_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnRHAITO_CZEI_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnPASSWORDKIGEN As Global.System.Data.DataColumn
        
        Private columnSAITEIHOSYOKIN As Global.System.Data.DataColumn
        
        Private columnHHOSYOKIN_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnHHOSYOKIN_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnHRISOKU_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnHRISOKU_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnSAZUIARI_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnSAZUIARI_ROUNDKBN As Global.System.Data.DataColumn
        
        Private columnNENSIIRE_ROUNDKETA As Global.System.Data.DataColumn
        
        Private columnNENSIIRE_ROUNDKBN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_INITIALINFOView"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KEYCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKEYCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOG_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOG_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOG_DELDAYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOG_DELDAY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEDAISUUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEDAISUU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SEDAIBACKUP_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEDAIBACKUP_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BACKUPFILE_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBACKUPFILE_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BACKUPLOG_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBACKUPLOG_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BACKUPLOG_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBACKUPLOG_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PDF_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPDF_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POST_DIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOST_DIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POST_DLURLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOST_DLURL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POST_COMPRESSNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOST_COMPRESSNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POST_THAWNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOST_THAWNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_SYUSIKINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_SYUSIKIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_RIRITUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_RIRITU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_KOKUZEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_KOKUZEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_CHIHOUZEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_CHIHOUZEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_KZEI_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_KZEI_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_KZEI_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_KZEI_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_CZEI_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_CZEI_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAITO_CZEI_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAITO_CZEI_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_GENSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_GENSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_KOKUZEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_KOKUZEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_CHOHOUZEIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_CHOHOUZEI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_RITU_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_RITU_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_RITU_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_RITU_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_KZEI_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_KZEI_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_KZEI_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_KZEI_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_CZEI_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_CZEI_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RHAITO_CZEI_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRHAITO_CZEI_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PASSWORDKIGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSWORDKIGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SAITEIHOSYOKINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAITEIHOSYOKIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HHOSYOKIN_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHHOSYOKIN_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HHOSYOKIN_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHHOSYOKIN_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HRISOKU_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRISOKU_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HRISOKU_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHRISOKU_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SAZUIARI_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAZUIARI_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SAZUIARI_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAZUIARI_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NENSIIRE_ROUNDKETAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNENSIIRE_ROUNDKETA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NENSIIRE_ROUNDKBNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNENSIIRE_ROUNDKBN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_INITIALINFOViewRow
            Get
                Return CType(Me.Rows(index),S_INITIALINFOViewRow)
            End Get
        End Property
        
        Public Event S_INITIALINFOViewRowChanging As S_INITIALINFOViewRowChangeEventHandler
        
        Public Event S_INITIALINFOViewRowChanged As S_INITIALINFOViewRowChangeEventHandler
        
        Public Event S_INITIALINFOViewRowDeleting As S_INITIALINFOViewRowChangeEventHandler
        
        Public Event S_INITIALINFOViewRowDeleted As S_INITIALINFOViewRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_INITIALINFOViewRow(ByVal row As S_INITIALINFOViewRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_INITIALINFOViewRow( _
                    ByVal KEYCODE As Decimal,  _
                    ByVal LOG_DIR As String,  _
                    ByVal LOG_DELDAY As Short,  _
                    ByVal SEDAISUU As Short,  _
                    ByVal SEDAIBACKUP_DIR As String,  _
                    ByVal BACKUPFILE_DIR As String,  _
                    ByVal BACKUPLOG_DIR As String,  _
                    ByVal BACKUPLOG_NAME As String,  _
                    ByVal PDF_DIR As String,  _
                    ByVal POST_DIR As String,  _
                    ByVal POST_DLURL As String,  _
                    ByVal POST_COMPRESSNAME As String,  _
                    ByVal POST_THAWNAME As String,  _
                    ByVal SHAITO_SYUSIKIN As Decimal,  _
                    ByVal SHAITO_RIRITU As Decimal,  _
                    ByVal SHAITO_KOKUZEI As Decimal,  _
                    ByVal SHAITO_CHIHOUZEI As Decimal,  _
                    ByVal SHAITO_ROUNDKETA As Short,  _
                    ByVal SHAITO_ROUNDKBN As Short,  _
                    ByVal SHAITO_KZEI_ROUNDKETA As Short,  _
                    ByVal SHAITO_KZEI_ROUNDKBN As Short,  _
                    ByVal SHAITO_CZEI_ROUNDKETA As Short,  _
                    ByVal SHAITO_CZEI_ROUNDKBN As Short,  _
                    ByVal RHAITO_GENSI As Decimal,  _
                    ByVal RHAITO_KOKUZEI As Decimal,  _
                    ByVal RHAITO_CHOHOUZEI As Decimal,  _
                    ByVal RHAITO_ROUNDKETA As Short,  _
                    ByVal RHAITO_ROUNDKBN As Short,  _
                    ByVal RHAITO_RITU_ROUNDKETA As Short,  _
                    ByVal RHAITO_RITU_ROUNDKBN As Short,  _
                    ByVal RHAITO_KZEI_ROUNDKETA As Short,  _
                    ByVal RHAITO_KZEI_ROUNDKBN As Short,  _
                    ByVal RHAITO_CZEI_ROUNDKETA As Short,  _
                    ByVal RHAITO_CZEI_ROUNDKBN As Short,  _
                    ByVal PASSWORDKIGEN As Decimal,  _
                    ByVal SAITEIHOSYOKIN As Decimal,  _
                    ByVal HHOSYOKIN_ROUNDKETA As Short,  _
                    ByVal HHOSYOKIN_ROUNDKBN As Short,  _
                    ByVal HRISOKU_ROUNDKETA As Short,  _
                    ByVal HRISOKU_ROUNDKBN As Short,  _
                    ByVal SAZUIARI_ROUNDKETA As Short,  _
                    ByVal SAZUIARI_ROUNDKBN As Short,  _
                    ByVal NENSIIRE_ROUNDKETA As Short,  _
                    ByVal NENSIIRE_ROUNDKBN As Short) As S_INITIALINFOViewRow
            Dim rowS_INITIALINFOViewRow As S_INITIALINFOViewRow = CType(Me.NewRow,S_INITIALINFOViewRow)
            Dim columnValuesArray() As Object = New Object() {KEYCODE, LOG_DIR, LOG_DELDAY, SEDAISUU, SEDAIBACKUP_DIR, BACKUPFILE_DIR, BACKUPLOG_DIR, BACKUPLOG_NAME, PDF_DIR, POST_DIR, POST_DLURL, POST_COMPRESSNAME, POST_THAWNAME, SHAITO_SYUSIKIN, SHAITO_RIRITU, SHAITO_KOKUZEI, SHAITO_CHIHOUZEI, SHAITO_ROUNDKETA, SHAITO_ROUNDKBN, SHAITO_KZEI_ROUNDKETA, SHAITO_KZEI_ROUNDKBN, SHAITO_CZEI_ROUNDKETA, SHAITO_CZEI_ROUNDKBN, RHAITO_GENSI, RHAITO_KOKUZEI, RHAITO_CHOHOUZEI, RHAITO_ROUNDKETA, RHAITO_ROUNDKBN, RHAITO_RITU_ROUNDKETA, RHAITO_RITU_ROUNDKBN, RHAITO_KZEI_ROUNDKETA, RHAITO_KZEI_ROUNDKBN, RHAITO_CZEI_ROUNDKETA, RHAITO_CZEI_ROUNDKBN, PASSWORDKIGEN, SAITEIHOSYOKIN, HHOSYOKIN_ROUNDKETA, HHOSYOKIN_ROUNDKBN, HRISOKU_ROUNDKETA, HRISOKU_ROUNDKBN, SAZUIARI_ROUNDKETA, SAZUIARI_ROUNDKBN, NENSIIRE_ROUNDKETA, NENSIIRE_ROUNDKBN}
            rowS_INITIALINFOViewRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_INITIALINFOViewRow)
            Return rowS_INITIALINFOViewRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByKEYCODE(ByVal KEYCODE As Decimal) As S_INITIALINFOViewRow
            Return CType(Me.Rows.Find(New Object() {KEYCODE}),S_INITIALINFOViewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_INITIALINFOViewDataTable = CType(MyBase.Clone,S_INITIALINFOViewDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_INITIALINFOViewDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnKEYCODE = MyBase.Columns("KEYCODE")
            Me.columnLOG_DIR = MyBase.Columns("LOG_DIR")
            Me.columnLOG_DELDAY = MyBase.Columns("LOG_DELDAY")
            Me.columnSEDAISUU = MyBase.Columns("SEDAISUU")
            Me.columnSEDAIBACKUP_DIR = MyBase.Columns("SEDAIBACKUP_DIR")
            Me.columnBACKUPFILE_DIR = MyBase.Columns("BACKUPFILE_DIR")
            Me.columnBACKUPLOG_DIR = MyBase.Columns("BACKUPLOG_DIR")
            Me.columnBACKUPLOG_NAME = MyBase.Columns("BACKUPLOG_NAME")
            Me.columnPDF_DIR = MyBase.Columns("PDF_DIR")
            Me.columnPOST_DIR = MyBase.Columns("POST_DIR")
            Me.columnPOST_DLURL = MyBase.Columns("POST_DLURL")
            Me.columnPOST_COMPRESSNAME = MyBase.Columns("POST_COMPRESSNAME")
            Me.columnPOST_THAWNAME = MyBase.Columns("POST_THAWNAME")
            Me.columnSHAITO_SYUSIKIN = MyBase.Columns("SHAITO_SYUSIKIN")
            Me.columnSHAITO_RIRITU = MyBase.Columns("SHAITO_RIRITU")
            Me.columnSHAITO_KOKUZEI = MyBase.Columns("SHAITO_KOKUZEI")
            Me.columnSHAITO_CHIHOUZEI = MyBase.Columns("SHAITO_CHIHOUZEI")
            Me.columnSHAITO_ROUNDKETA = MyBase.Columns("SHAITO_ROUNDKETA")
            Me.columnSHAITO_ROUNDKBN = MyBase.Columns("SHAITO_ROUNDKBN")
            Me.columnSHAITO_KZEI_ROUNDKETA = MyBase.Columns("SHAITO_KZEI_ROUNDKETA")
            Me.columnSHAITO_KZEI_ROUNDKBN = MyBase.Columns("SHAITO_KZEI_ROUNDKBN")
            Me.columnSHAITO_CZEI_ROUNDKETA = MyBase.Columns("SHAITO_CZEI_ROUNDKETA")
            Me.columnSHAITO_CZEI_ROUNDKBN = MyBase.Columns("SHAITO_CZEI_ROUNDKBN")
            Me.columnRHAITO_GENSI = MyBase.Columns("RHAITO_GENSI")
            Me.columnRHAITO_KOKUZEI = MyBase.Columns("RHAITO_KOKUZEI")
            Me.columnRHAITO_CHOHOUZEI = MyBase.Columns("RHAITO_CHOHOUZEI")
            Me.columnRHAITO_ROUNDKETA = MyBase.Columns("RHAITO_ROUNDKETA")
            Me.columnRHAITO_ROUNDKBN = MyBase.Columns("RHAITO_ROUNDKBN")
            Me.columnRHAITO_RITU_ROUNDKETA = MyBase.Columns("RHAITO_RITU_ROUNDKETA")
            Me.columnRHAITO_RITU_ROUNDKBN = MyBase.Columns("RHAITO_RITU_ROUNDKBN")
            Me.columnRHAITO_KZEI_ROUNDKETA = MyBase.Columns("RHAITO_KZEI_ROUNDKETA")
            Me.columnRHAITO_KZEI_ROUNDKBN = MyBase.Columns("RHAITO_KZEI_ROUNDKBN")
            Me.columnRHAITO_CZEI_ROUNDKETA = MyBase.Columns("RHAITO_CZEI_ROUNDKETA")
            Me.columnRHAITO_CZEI_ROUNDKBN = MyBase.Columns("RHAITO_CZEI_ROUNDKBN")
            Me.columnPASSWORDKIGEN = MyBase.Columns("PASSWORDKIGEN")
            Me.columnSAITEIHOSYOKIN = MyBase.Columns("SAITEIHOSYOKIN")
            Me.columnHHOSYOKIN_ROUNDKETA = MyBase.Columns("HHOSYOKIN_ROUNDKETA")
            Me.columnHHOSYOKIN_ROUNDKBN = MyBase.Columns("HHOSYOKIN_ROUNDKBN")
            Me.columnHRISOKU_ROUNDKETA = MyBase.Columns("HRISOKU_ROUNDKETA")
            Me.columnHRISOKU_ROUNDKBN = MyBase.Columns("HRISOKU_ROUNDKBN")
            Me.columnSAZUIARI_ROUNDKETA = MyBase.Columns("SAZUIARI_ROUNDKETA")
            Me.columnSAZUIARI_ROUNDKBN = MyBase.Columns("SAZUIARI_ROUNDKBN")
            Me.columnNENSIIRE_ROUNDKETA = MyBase.Columns("NENSIIRE_ROUNDKETA")
            Me.columnNENSIIRE_ROUNDKBN = MyBase.Columns("NENSIIRE_ROUNDKBN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnKEYCODE = New Global.System.Data.DataColumn("KEYCODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKEYCODE)
            Me.columnLOG_DIR = New Global.System.Data.DataColumn("LOG_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOG_DIR)
            Me.columnLOG_DELDAY = New Global.System.Data.DataColumn("LOG_DELDAY", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOG_DELDAY)
            Me.columnSEDAISUU = New Global.System.Data.DataColumn("SEDAISUU", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEDAISUU)
            Me.columnSEDAIBACKUP_DIR = New Global.System.Data.DataColumn("SEDAIBACKUP_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEDAIBACKUP_DIR)
            Me.columnBACKUPFILE_DIR = New Global.System.Data.DataColumn("BACKUPFILE_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBACKUPFILE_DIR)
            Me.columnBACKUPLOG_DIR = New Global.System.Data.DataColumn("BACKUPLOG_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBACKUPLOG_DIR)
            Me.columnBACKUPLOG_NAME = New Global.System.Data.DataColumn("BACKUPLOG_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBACKUPLOG_NAME)
            Me.columnPDF_DIR = New Global.System.Data.DataColumn("PDF_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPDF_DIR)
            Me.columnPOST_DIR = New Global.System.Data.DataColumn("POST_DIR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOST_DIR)
            Me.columnPOST_DLURL = New Global.System.Data.DataColumn("POST_DLURL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOST_DLURL)
            Me.columnPOST_COMPRESSNAME = New Global.System.Data.DataColumn("POST_COMPRESSNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOST_COMPRESSNAME)
            Me.columnPOST_THAWNAME = New Global.System.Data.DataColumn("POST_THAWNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOST_THAWNAME)
            Me.columnSHAITO_SYUSIKIN = New Global.System.Data.DataColumn("SHAITO_SYUSIKIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_SYUSIKIN)
            Me.columnSHAITO_RIRITU = New Global.System.Data.DataColumn("SHAITO_RIRITU", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_RIRITU)
            Me.columnSHAITO_KOKUZEI = New Global.System.Data.DataColumn("SHAITO_KOKUZEI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_KOKUZEI)
            Me.columnSHAITO_CHIHOUZEI = New Global.System.Data.DataColumn("SHAITO_CHIHOUZEI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_CHIHOUZEI)
            Me.columnSHAITO_ROUNDKETA = New Global.System.Data.DataColumn("SHAITO_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_ROUNDKETA)
            Me.columnSHAITO_ROUNDKBN = New Global.System.Data.DataColumn("SHAITO_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_ROUNDKBN)
            Me.columnSHAITO_KZEI_ROUNDKETA = New Global.System.Data.DataColumn("SHAITO_KZEI_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_KZEI_ROUNDKETA)
            Me.columnSHAITO_KZEI_ROUNDKBN = New Global.System.Data.DataColumn("SHAITO_KZEI_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_KZEI_ROUNDKBN)
            Me.columnSHAITO_CZEI_ROUNDKETA = New Global.System.Data.DataColumn("SHAITO_CZEI_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_CZEI_ROUNDKETA)
            Me.columnSHAITO_CZEI_ROUNDKBN = New Global.System.Data.DataColumn("SHAITO_CZEI_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAITO_CZEI_ROUNDKBN)
            Me.columnRHAITO_GENSI = New Global.System.Data.DataColumn("RHAITO_GENSI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_GENSI)
            Me.columnRHAITO_KOKUZEI = New Global.System.Data.DataColumn("RHAITO_KOKUZEI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_KOKUZEI)
            Me.columnRHAITO_CHOHOUZEI = New Global.System.Data.DataColumn("RHAITO_CHOHOUZEI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_CHOHOUZEI)
            Me.columnRHAITO_ROUNDKETA = New Global.System.Data.DataColumn("RHAITO_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_ROUNDKETA)
            Me.columnRHAITO_ROUNDKBN = New Global.System.Data.DataColumn("RHAITO_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_ROUNDKBN)
            Me.columnRHAITO_RITU_ROUNDKETA = New Global.System.Data.DataColumn("RHAITO_RITU_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_RITU_ROUNDKETA)
            Me.columnRHAITO_RITU_ROUNDKBN = New Global.System.Data.DataColumn("RHAITO_RITU_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_RITU_ROUNDKBN)
            Me.columnRHAITO_KZEI_ROUNDKETA = New Global.System.Data.DataColumn("RHAITO_KZEI_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_KZEI_ROUNDKETA)
            Me.columnRHAITO_KZEI_ROUNDKBN = New Global.System.Data.DataColumn("RHAITO_KZEI_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_KZEI_ROUNDKBN)
            Me.columnRHAITO_CZEI_ROUNDKETA = New Global.System.Data.DataColumn("RHAITO_CZEI_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_CZEI_ROUNDKETA)
            Me.columnRHAITO_CZEI_ROUNDKBN = New Global.System.Data.DataColumn("RHAITO_CZEI_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRHAITO_CZEI_ROUNDKBN)
            Me.columnPASSWORDKIGEN = New Global.System.Data.DataColumn("PASSWORDKIGEN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSWORDKIGEN)
            Me.columnSAITEIHOSYOKIN = New Global.System.Data.DataColumn("SAITEIHOSYOKIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAITEIHOSYOKIN)
            Me.columnHHOSYOKIN_ROUNDKETA = New Global.System.Data.DataColumn("HHOSYOKIN_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHHOSYOKIN_ROUNDKETA)
            Me.columnHHOSYOKIN_ROUNDKBN = New Global.System.Data.DataColumn("HHOSYOKIN_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHHOSYOKIN_ROUNDKBN)
            Me.columnHRISOKU_ROUNDKETA = New Global.System.Data.DataColumn("HRISOKU_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRISOKU_ROUNDKETA)
            Me.columnHRISOKU_ROUNDKBN = New Global.System.Data.DataColumn("HRISOKU_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHRISOKU_ROUNDKBN)
            Me.columnSAZUIARI_ROUNDKETA = New Global.System.Data.DataColumn("SAZUIARI_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAZUIARI_ROUNDKETA)
            Me.columnSAZUIARI_ROUNDKBN = New Global.System.Data.DataColumn("SAZUIARI_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAZUIARI_ROUNDKBN)
            Me.columnNENSIIRE_ROUNDKETA = New Global.System.Data.DataColumn("NENSIIRE_ROUNDKETA", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNENSIIRE_ROUNDKETA)
            Me.columnNENSIIRE_ROUNDKBN = New Global.System.Data.DataColumn("NENSIIRE_ROUNDKBN", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNENSIIRE_ROUNDKBN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnKEYCODE}, true))
            Me.columnKEYCODE.AllowDBNull = false
            Me.columnKEYCODE.Unique = true
            Me.columnLOG_DIR.MaxLength = 40
            Me.columnLOG_DELDAY.AllowDBNull = false
            Me.columnSEDAISUU.AllowDBNull = false
            Me.columnSEDAIBACKUP_DIR.MaxLength = 40
            Me.columnBACKUPFILE_DIR.MaxLength = 40
            Me.columnBACKUPLOG_DIR.MaxLength = 40
            Me.columnBACKUPLOG_NAME.MaxLength = 40
            Me.columnPDF_DIR.MaxLength = 40
            Me.columnPOST_DIR.MaxLength = 40
            Me.columnPOST_DLURL.MaxLength = 200
            Me.columnPOST_COMPRESSNAME.MaxLength = 40
            Me.columnPOST_THAWNAME.MaxLength = 40
            Me.columnSHAITO_SYUSIKIN.AllowDBNull = false
            Me.columnSHAITO_RIRITU.AllowDBNull = false
            Me.columnSHAITO_KOKUZEI.AllowDBNull = false
            Me.columnSHAITO_CHIHOUZEI.AllowDBNull = false
            Me.columnSHAITO_ROUNDKETA.AllowDBNull = false
            Me.columnSHAITO_ROUNDKBN.AllowDBNull = false
            Me.columnSHAITO_KZEI_ROUNDKETA.AllowDBNull = false
            Me.columnSHAITO_KZEI_ROUNDKBN.AllowDBNull = false
            Me.columnSHAITO_CZEI_ROUNDKETA.AllowDBNull = false
            Me.columnSHAITO_CZEI_ROUNDKBN.AllowDBNull = false
            Me.columnRHAITO_GENSI.AllowDBNull = false
            Me.columnRHAITO_KOKUZEI.AllowDBNull = false
            Me.columnRHAITO_CHOHOUZEI.AllowDBNull = false
            Me.columnRHAITO_ROUNDKETA.AllowDBNull = false
            Me.columnRHAITO_ROUNDKBN.AllowDBNull = false
            Me.columnRHAITO_RITU_ROUNDKETA.AllowDBNull = false
            Me.columnRHAITO_RITU_ROUNDKBN.AllowDBNull = false
            Me.columnRHAITO_KZEI_ROUNDKETA.AllowDBNull = false
            Me.columnRHAITO_KZEI_ROUNDKBN.AllowDBNull = false
            Me.columnRHAITO_CZEI_ROUNDKETA.AllowDBNull = false
            Me.columnRHAITO_CZEI_ROUNDKBN.AllowDBNull = false
            Me.columnPASSWORDKIGEN.AllowDBNull = false
            Me.columnSAITEIHOSYOKIN.AllowDBNull = false
            Me.columnHHOSYOKIN_ROUNDKETA.AllowDBNull = false
            Me.columnHHOSYOKIN_ROUNDKBN.AllowDBNull = false
            Me.columnHRISOKU_ROUNDKETA.AllowDBNull = false
            Me.columnHRISOKU_ROUNDKBN.AllowDBNull = false
            Me.columnSAZUIARI_ROUNDKETA.AllowDBNull = false
            Me.columnSAZUIARI_ROUNDKBN.AllowDBNull = false
            Me.columnNENSIIRE_ROUNDKETA.AllowDBNull = false
            Me.columnNENSIIRE_ROUNDKBN.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_INITIALINFOViewRow() As S_INITIALINFOViewRow
            Return CType(Me.NewRow,S_INITIALINFOViewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_INITIALINFOViewRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_INITIALINFOViewRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_INITIALINFOViewRowChangedEvent) Is Nothing) Then
                RaiseEvent S_INITIALINFOViewRowChanged(Me, New S_INITIALINFOViewRowChangeEvent(CType(e.Row,S_INITIALINFOViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_INITIALINFOViewRowChangingEvent) Is Nothing) Then
                RaiseEvent S_INITIALINFOViewRowChanging(Me, New S_INITIALINFOViewRowChangeEvent(CType(e.Row,S_INITIALINFOViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_INITIALINFOViewRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_INITIALINFOViewRowDeleted(Me, New S_INITIALINFOViewRowChangeEvent(CType(e.Row,S_INITIALINFOViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_INITIALINFOViewRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_INITIALINFOViewRowDeleting(Me, New S_INITIALINFOViewRowChangeEvent(CType(e.Row,S_INITIALINFOViewRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_INITIALINFOViewRow(ByVal row As S_INITIALINFOViewRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As S_INITIALINFO = New S_INITIALINFO
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_INITIALINFOViewDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_INITIALINFOViewRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_INITIALINFOView As S_INITIALINFOViewDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_INITIALINFOView = CType(Me.Table,S_INITIALINFOViewDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property KEYCODE() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.KEYCODEColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.KEYCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOG_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.LOG_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'LOG_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.LOG_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOG_DELDAY() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.LOG_DELDAYColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.LOG_DELDAYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEDAISUU() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SEDAISUUColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SEDAISUUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SEDAIBACKUP_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.SEDAIBACKUP_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'SEDAIBACKUP_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SEDAIBACKUP_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BACKUPFILE_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.BACKUPFILE_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'BACKUPFILE_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.BACKUPFILE_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BACKUPLOG_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.BACKUPLOG_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'BACKUPLOG_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.BACKUPLOG_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BACKUPLOG_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.BACKUPLOG_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'BACKUPLOG_NAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.BACKUPLOG_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PDF_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.PDF_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'PDF_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.PDF_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POST_DIR() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.POST_DIRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'POST_DIR' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.POST_DIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POST_DLURL() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.POST_DLURLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'POST_DLURL' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.POST_DLURLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POST_COMPRESSNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.POST_COMPRESSNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'POST_COMPRESSNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.POST_COMPRESSNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POST_THAWNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_INITIALINFOView.POST_THAWNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("テーブル 'S_INITIALINFOView' にある列 'POST_THAWNAME' の値は DBNull です。", e)
                End Try
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.POST_THAWNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_SYUSIKIN() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_SYUSIKINColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_SYUSIKINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_RIRITU() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_RIRITUColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_RIRITUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_KOKUZEI() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_KOKUZEIColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_KOKUZEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_CHIHOUZEI() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_CHIHOUZEIColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_CHIHOUZEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_KZEI_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_KZEI_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_KZEI_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_KZEI_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_KZEI_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_KZEI_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_CZEI_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_CZEI_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_CZEI_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAITO_CZEI_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SHAITO_CZEI_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SHAITO_CZEI_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_GENSI() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_GENSIColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_GENSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_KOKUZEI() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_KOKUZEIColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_KOKUZEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_CHOHOUZEI() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_CHOHOUZEIColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_CHOHOUZEIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_RITU_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_RITU_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_RITU_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_RITU_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_RITU_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_RITU_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_KZEI_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_KZEI_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_KZEI_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_KZEI_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_KZEI_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_KZEI_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_CZEI_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_CZEI_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_CZEI_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RHAITO_CZEI_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.RHAITO_CZEI_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.RHAITO_CZEI_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PASSWORDKIGEN() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.PASSWORDKIGENColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.PASSWORDKIGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SAITEIHOSYOKIN() As Decimal
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SAITEIHOSYOKINColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SAITEIHOSYOKINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HHOSYOKIN_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.HHOSYOKIN_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.HHOSYOKIN_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HHOSYOKIN_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.HHOSYOKIN_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.HHOSYOKIN_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HRISOKU_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.HRISOKU_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.HRISOKU_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HRISOKU_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.HRISOKU_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.HRISOKU_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SAZUIARI_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SAZUIARI_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SAZUIARI_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SAZUIARI_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.SAZUIARI_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.SAZUIARI_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NENSIIRE_ROUNDKETA() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.NENSIIRE_ROUNDKETAColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.NENSIIRE_ROUNDKETAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NENSIIRE_ROUNDKBN() As Short
            Get
                Return CType(Me(Me.tableS_INITIALINFOView.NENSIIRE_ROUNDKBNColumn),Short)
            End Get
            Set
                Me(Me.tableS_INITIALINFOView.NENSIIRE_ROUNDKBNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLOG_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.LOG_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLOG_DIRNull()
            Me(Me.tableS_INITIALINFOView.LOG_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSEDAIBACKUP_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.SEDAIBACKUP_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSEDAIBACKUP_DIRNull()
            Me(Me.tableS_INITIALINFOView.SEDAIBACKUP_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBACKUPFILE_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.BACKUPFILE_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBACKUPFILE_DIRNull()
            Me(Me.tableS_INITIALINFOView.BACKUPFILE_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBACKUPLOG_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.BACKUPLOG_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBACKUPLOG_DIRNull()
            Me(Me.tableS_INITIALINFOView.BACKUPLOG_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBACKUPLOG_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.BACKUPLOG_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBACKUPLOG_NAMENull()
            Me(Me.tableS_INITIALINFOView.BACKUPLOG_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPDF_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.PDF_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPDF_DIRNull()
            Me(Me.tableS_INITIALINFOView.PDF_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOST_DIRNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.POST_DIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOST_DIRNull()
            Me(Me.tableS_INITIALINFOView.POST_DIRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOST_DLURLNull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.POST_DLURLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOST_DLURLNull()
            Me(Me.tableS_INITIALINFOView.POST_DLURLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOST_COMPRESSNAMENull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.POST_COMPRESSNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOST_COMPRESSNAMENull()
            Me(Me.tableS_INITIALINFOView.POST_COMPRESSNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOST_THAWNAMENull() As Boolean
            Return Me.IsNull(Me.tableS_INITIALINFOView.POST_THAWNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOST_THAWNAMENull()
            Me(Me.tableS_INITIALINFOView.POST_THAWNAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_INITIALINFOViewRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_INITIALINFOViewRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_INITIALINFOViewRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_INITIALINFOViewRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace S_INITIALINFOTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_INITIALINFOViewTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_INITIALINFOView"
            tableMapping.ColumnMappings.Add("KEYCODE", "KEYCODE")
            tableMapping.ColumnMappings.Add("LOG_DIR", "LOG_DIR")
            tableMapping.ColumnMappings.Add("LOG_DELDAY", "LOG_DELDAY")
            tableMapping.ColumnMappings.Add("SEDAISUU", "SEDAISUU")
            tableMapping.ColumnMappings.Add("SEDAIBACKUP_DIR", "SEDAIBACKUP_DIR")
            tableMapping.ColumnMappings.Add("BACKUPFILE_DIR", "BACKUPFILE_DIR")
            tableMapping.ColumnMappings.Add("BACKUPLOG_DIR", "BACKUPLOG_DIR")
            tableMapping.ColumnMappings.Add("BACKUPLOG_NAME", "BACKUPLOG_NAME")
            tableMapping.ColumnMappings.Add("PDF_DIR", "PDF_DIR")
            tableMapping.ColumnMappings.Add("POST_DIR", "POST_DIR")
            tableMapping.ColumnMappings.Add("POST_DLURL", "POST_DLURL")
            tableMapping.ColumnMappings.Add("POST_COMPRESSNAME", "POST_COMPRESSNAME")
            tableMapping.ColumnMappings.Add("POST_THAWNAME", "POST_THAWNAME")
            tableMapping.ColumnMappings.Add("SHAITO_SYUSIKIN", "SHAITO_SYUSIKIN")
            tableMapping.ColumnMappings.Add("SHAITO_RIRITU", "SHAITO_RIRITU")
            tableMapping.ColumnMappings.Add("SHAITO_KOKUZEI", "SHAITO_KOKUZEI")
            tableMapping.ColumnMappings.Add("SHAITO_CHIHOUZEI", "SHAITO_CHIHOUZEI")
            tableMapping.ColumnMappings.Add("SHAITO_ROUNDKETA", "SHAITO_ROUNDKETA")
            tableMapping.ColumnMappings.Add("SHAITO_ROUNDKBN", "SHAITO_ROUNDKBN")
            tableMapping.ColumnMappings.Add("SHAITO_KZEI_ROUNDKETA", "SHAITO_KZEI_ROUNDKETA")
            tableMapping.ColumnMappings.Add("SHAITO_KZEI_ROUNDKBN", "SHAITO_KZEI_ROUNDKBN")
            tableMapping.ColumnMappings.Add("SHAITO_CZEI_ROUNDKETA", "SHAITO_CZEI_ROUNDKETA")
            tableMapping.ColumnMappings.Add("SHAITO_CZEI_ROUNDKBN", "SHAITO_CZEI_ROUNDKBN")
            tableMapping.ColumnMappings.Add("RHAITO_GENSI", "RHAITO_GENSI")
            tableMapping.ColumnMappings.Add("RHAITO_KOKUZEI", "RHAITO_KOKUZEI")
            tableMapping.ColumnMappings.Add("RHAITO_CHOHOUZEI", "RHAITO_CHOHOUZEI")
            tableMapping.ColumnMappings.Add("RHAITO_ROUNDKETA", "RHAITO_ROUNDKETA")
            tableMapping.ColumnMappings.Add("RHAITO_ROUNDKBN", "RHAITO_ROUNDKBN")
            tableMapping.ColumnMappings.Add("RHAITO_RITU_ROUNDKETA", "RHAITO_RITU_ROUNDKETA")
            tableMapping.ColumnMappings.Add("RHAITO_RITU_ROUNDKBN", "RHAITO_RITU_ROUNDKBN")
            tableMapping.ColumnMappings.Add("RHAITO_KZEI_ROUNDKETA", "RHAITO_KZEI_ROUNDKETA")
            tableMapping.ColumnMappings.Add("RHAITO_KZEI_ROUNDKBN", "RHAITO_KZEI_ROUNDKBN")
            tableMapping.ColumnMappings.Add("RHAITO_CZEI_ROUNDKETA", "RHAITO_CZEI_ROUNDKETA")
            tableMapping.ColumnMappings.Add("RHAITO_CZEI_ROUNDKBN", "RHAITO_CZEI_ROUNDKBN")
            tableMapping.ColumnMappings.Add("PASSWORDKIGEN", "PASSWORDKIGEN")
            tableMapping.ColumnMappings.Add("SAITEIHOSYOKIN", "SAITEIHOSYOKIN")
            tableMapping.ColumnMappings.Add("HHOSYOKIN_ROUNDKETA", "HHOSYOKIN_ROUNDKETA")
            tableMapping.ColumnMappings.Add("HHOSYOKIN_ROUNDKBN", "HHOSYOKIN_ROUNDKBN")
            tableMapping.ColumnMappings.Add("HRISOKU_ROUNDKETA", "HRISOKU_ROUNDKETA")
            tableMapping.ColumnMappings.Add("HRISOKU_ROUNDKBN", "HRISOKU_ROUNDKBN")
            tableMapping.ColumnMappings.Add("SAZUIARI_ROUNDKETA", "SAZUIARI_ROUNDKETA")
            tableMapping.ColumnMappings.Add("SAZUIARI_ROUNDKBN", "SAZUIARI_ROUNDKBN")
            tableMapping.ColumnMappings.Add("NENSIIRE_ROUNDKETA", "NENSIIRE_ROUNDKETA")
            tableMapping.ColumnMappings.Add("NENSIIRE_ROUNDKBN", "NENSIIRE_ROUNDKBN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Model.My.MySettings.Default.DB_FSUISANConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT KEYCODE, LOG_DIR, LOG_DELDAY, SEDAISUU, SEDAIBACKUP_DIR, BACKUPFILE_DIR, B"& _ 
                "ACKUPLOG_DIR, BACKUPLOG_NAME, PDF_DIR, POST_DIR, POST_DLURL, POST_COMPRESSNAME, "& _ 
                "POST_THAWNAME, SHAITO_SYUSIKIN, SHAITO_RIRITU, SHAITO_KOKUZEI, SHAITO_CHIHOUZEI,"& _ 
                " SHAITO_ROUNDKETA, SHAITO_ROUNDKBN, SHAITO_KZEI_ROUNDKETA, SHAITO_KZEI_ROUNDKBN,"& _ 
                " SHAITO_CZEI_ROUNDKETA, SHAITO_CZEI_ROUNDKBN, RHAITO_GENSI, RHAITO_KOKUZEI, RHAI"& _ 
                "TO_CHOHOUZEI, RHAITO_ROUNDKETA, RHAITO_ROUNDKBN, RHAITO_RITU_ROUNDKETA, RHAITO_R"& _ 
                "ITU_ROUNDKBN, RHAITO_KZEI_ROUNDKETA, RHAITO_KZEI_ROUNDKBN, RHAITO_CZEI_ROUNDKETA"& _ 
                ", RHAITO_CZEI_ROUNDKBN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SAITEIHOSYOKIN,HHOSYOKIN_ROUNDKETA,HHOSYOKIN_ROUNDKBN,"& _ 
                "HRISOKU_ROUNDKETA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"HRISOKU_ROUNDKBN,SAZUIARI_ROUNDKETA,SAZUIARI_ROUNDKBN,NENSII"& _ 
                "RE_ROUNDKETA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"NENSIIRE_ROUNDKBN,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"PASSWORDKIGEN FROM S_INITIALINFO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As S_INITIALINFO.S_INITIALINFOViewDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As S_INITIALINFO.S_INITIALINFOViewDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As S_INITIALINFO.S_INITIALINFOViewDataTable = New S_INITIALINFO.S_INITIALINFOViewDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As S_INITIALINFO, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As S_INITIALINFO, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As S_INITIALINFO, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As S_INITIALINFO) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager には接続情報がありません。それぞれの TableAdapterManager TableAdapter プロパティを有効な"& _ 
                        " TableAdapter インスタンスに設定してください。")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("トランザクションを開始できません。現在のデータ接続がトランザクションをサポートしていないか、または現在の状態がトランザクションの開始を許可していません。")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
